{
  "openapi": "3.0.0",
  "info": {
    "title": "Malbouche API",
    "version": "1.0.0",
    "description": "API for ESP32 analog clock control with Firestore"
  },
  "servers": [
    {
      "url": "http://localhost:3000/api",
      "description": "Development server"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "nombre": {
            "type": "string"
          },
          "apellidos": {
            "type": "string"
          },
          "correo": {
            "type": "string",
            "format": "email"
          },
          "puesto": {
            "type": "string"
          },
          "rol": {
            "type": "string",
            "enum": ["admin", "usuario", "visitante"]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Movement": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "nombre": {
            "type": "string"
          },
          "tipoMovimiento": {
            "type": "string",
            "enum": ["derecha", "izquierda", "columpiarse", "loco", "normal", "personalizado"]
          },
          "velocidad": {
            "type": "integer",
            "minimum": 1,
            "maximum": 100
          },
          "duracion": {
            "type": "integer",
            "minimum": 1,
            "maximum": 3600
          }
        }
      },
      "Event": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "nombreEvento": {
            "type": "string"
          },
          "horaInicio": {
            "type": "string",
            "pattern": "^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$"
          },
          "horaFin": {
            "type": "string",
            "pattern": "^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$"
          },
          "diasSemana": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["lunes", "martes", "miercoles", "jueves", "viernes", "sabado", "domingo"]
            }
          },
          "tipoMovimiento": {
            "type": "string",
            "enum": ["derecha", "izquierda", "columpiarse", "loco", "normal", "personalizado"]
          },
          "activo": {
            "type": "boolean"
          }
        }
      }
    }
  },
  "paths": {
    "/auth/register": {
      "post": {
        "summary": "Register new user",
        "tags": ["Authentication"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["nombre", "apellidos", "correo", "password"],
                "properties": {
                  "nombre": {
                    "type": "string"
                  },
                  "apellidos": {
                    "type": "string"
                  },
                  "correo": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 6
                  },
                  "puesto": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully"
          },
          "400": {
            "description": "Validation errors"
          },
          "409": {
            "description": "User already exists"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Login",
        "tags": ["Authentication"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["correo", "password"],
                "properties": {
                  "correo": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "$ref": "#/components/schemas/User"
                        },
                        "token": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials"
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "Get all users",
        "tags": ["Users"],
        "security": [{"bearerAuth": []}],
        "responses": {
          "200": {
            "description": "List of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Insufficient permissions"
          }
        }
      },
      "post": {
        "summary": "Create new user",
        "tags": ["Users"],
        "security": [{"bearerAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully"
          },
          "400": {
            "description": "Validation errors"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Insufficient permissions"
          }
        }
      }
    },
    "/movements": {
      "get": {
        "summary": "Get all movements",
        "tags": ["Movements"],
        "security": [{"bearerAuth": []}],
        "responses": {
          "200": {
            "description": "List of movements",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Movement"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "summary": "Create new movement",
        "tags": ["Movements"],
        "security": [{"bearerAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Movement"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Movement created successfully"
          },
          "400": {
            "description": "Validation errors"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/events": {
      "get": {
        "summary": "Get all events",
        "tags": ["Events"],
        "security": [{"bearerAuth": []}],
        "responses": {
          "200": {
            "description": "List of events",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Event"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "summary": "Create new event",
        "tags": ["Events"],
        "security": [{"bearerAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Event"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Event created successfully"
          },
          "400": {
            "description": "Validation errors"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    }
  }
}
