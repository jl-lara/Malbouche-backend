// Agregar este endpoint al setup() del Arduino, después de los otros endpoints:

server.on("/custom", HTTP_POST, [](){
  if (server.hasArg("plain")) {
    String body = server.arg("plain");
    
    // Parsear JSON básico manualmente (o usar ArduinoJson si está disponible)
    // Ejemplo de payload esperado:
    // {
    //   "dirHoras": "horario|antihorario",
    //   "dirMinutos": "horario|antihorario", 
    //   "velHoras": 1-100,
    //   "velMinutos": 1-100,
    //   "duracion": segundos
    // }
    
    Serial.println("Movimiento personalizado recibido:");
    Serial.println(body);
    
    // Aquí podrías parsear el JSON y extraer los parámetros
    // Por simplicidad, vamos a usar valores por defecto
    
    // Cambiar a modo personalizado
    modoActual = STOP; // Detener modo actual
    
    // Ejecutar movimiento personalizado
    // Esto es un ejemplo - deberías parsear los valores reales del JSON
    
    // Simular movimiento por 5 segundos
    unsigned long inicioMovimiento = millis();
    unsigned long duracionMs = 5000; // 5 segundos por defecto
    
    while (millis() - inicioMovimiento < duracionMs) {
      // Mover según dirección especificada
      girarUnPaso(motorHoras, stepIndexHoras, true);  // true = horario
      delay(10); // velocidad fija por ahora
      girarUnPaso(motorMin, stepIndexMin, false);     // false = antihorario  
      delay(10);
      
      server.handleClient(); // Mantener servidor activo
    }
    
    // Detener motores
    apagarMotor(motorHoras);
    apagarMotor(motorMin);
    
    server.send(200, "application/json", "{\"success\":true,\"message\":\"Movimiento personalizado ejecutado\"}");
    Serial.println("Movimiento personalizado completado");
  } else {
    server.send(400, "application/json", "{\"success\":false,\"error\":\"No se recibieron datos\"}");
  }
});
